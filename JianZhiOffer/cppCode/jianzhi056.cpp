/*
056 字符流中第一个不重复的字符
题目描述
请实现一个函数用来找出字符流中第一个只出现一次的字符。例如，当从字符流中只读出前两个字符"go"时，
第一个只出现一次的字符是"g"。当从该字符流中读出前六个字符“google"时，第一个只出现一次的字符是"l"。
输出描述:
如果当前字符流没有存在出现一次的字符，返回#字符。
*/

#include <unordered_map>
#include <iostream>
#include <vector>
using namespace std;

class Solution
{
private:
	unordered_map<char, int> store;
	vector<char> once_vec;
public:
	//Insert one char from stringstream
	void Insert(char ch)
	{		
		if ((++store[ch]) == 1)
		{
			once_vec.push_back(ch);
		}
		else
		{
			for (auto it = once_vec.begin(); it != once_vec.end(); ++it)
			{
				if (*it == ch)
				{
					once_vec.erase(it);
					break;
				}
			}
		}

	}
	//return the first appearence once char in current stringstream
	char FirstAppearingOnce()
	{
		if (once_vec.empty())
			return '#';
		else
		{
			return once_vec[0];
		}
	}


};