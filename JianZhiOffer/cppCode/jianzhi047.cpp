/*
047 扑克牌顺子

题目描述
LL今天心情特别好,因为他去买了一副扑克牌,发现里面居然有2个大王,
2个小王(一副牌原本是54张^_^)...他随机从中抽出了5张牌,想测测自己的手气,
看看能不能抽到顺子,如果抽到的话,他决定去买体育彩票,嘿嘿！！“红心A,黑桃3,小王,大王,方片5”,
“Oh My God!”不是顺子.....LL不高兴了,他想了想,决定大\小 王可以看成任何数字,并且A看作1,
J为11,Q为12,K为13。上面的5张牌就可以变成“1,2,3,4,5”(大小王分别看作2和4),“So Lucky!”。
LL决定去买体育彩票啦。 现在,要求你使用这幅牌模拟上面的过程,然后告诉我们LL的运气如何， 
如果牌能组成顺子就输出true，否则就输出false。为了方便起见,你可以认为大小王是0。

*/


/*
分析: 1.若vector中有重复数字，则为非顺子，返回false，可以用hash来存放。
	  2.在1的基础上，若vector中最大值与最小值差<=4，则是顺子，反之为非顺子。
*/
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

class Solution {

public:
    bool IsContinuous( vector<int> numbers ) {

		if( numbers.empty())
			return false;

		int len = numbers.size();
		int min_val = 15, max_val = 0;
		vector<int> hash(15,0);

		for(int i = 0; i < len; i++)
		{
			if(numbers[i] == 0)
				continue;
			//若除0之外重复，则非顺子
			if(hash[ numbers[i] ] == 0)
				hash[ numbers[i] ] = 1;
			else return false;

			min_val = min(min_val, numbers[i]);
			max_val = max(max_val, numbers[i]);
		}

		//若vector中最大值与最小值差<=4，则是顺子，反之为非顺子
		if((max_val - min_val) <= 4)
			return true;
		else
			return false;
};